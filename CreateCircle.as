package  {	import flash.display.Sprite	import flash.events.MouseEvent	import flash.events.Event	import flash.events.KeyboardEvent	import flash.ui.Keyboard	import flash.display.StageScaleMode	import flash.display.StageAlign	import flash.system.fscommand	import flash.display.BitmapData	import flash.display.Bitmap		public class CreateCircle extends Sprite{		var circle:Circle 		var line:Sprite		var radius:Number = 0		var color:Number = 0x6666ff		var click:Boolean = false				public function CreateCircle() {			init();		}		private function init(){			stage_Mc.width = stage.stageWidth			stage_Mc.height = stage.stageHeight			instruction.visible == true			instruction.x = instruction.width/2 + 20			instruction.y = (stage.stageHeight - instruction.height/2) - 20			fscommand ("trapallkeys", "true")			fscommand ("fullscreen", "true")			trace(getChildAt(0))  			stage.scaleMode = StageScaleMode.NO_BORDER			stage.scaleMode = StageScaleMode.SHOW_ALL			stage.align = StageAlign.TOP_LEFT			instructions.colors.tools.gotoAndStop(1)			instructions.colors.colorText.gotoAndStop(1)			addEventListener(Event.ENTER_FRAME, onEnterFrame)			stage.addEventListener(KeyboardEvent.KEY_DOWN, onChangeColor)			stage.addEventListener(KeyboardEvent.KEY_DOWN, onChangeTool)			stage.addEventListener(KeyboardEvent.KEY_UP, onStopDelete);			stage.addEventListener(MouseEvent.MOUSE_DOWN, onCreateCircle)			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUpCircle)		}		private function onChangeTool(event:KeyboardEvent):void{			if(event.keyCode == Keyboard.LEFT){				instructions.colors.tools.gotoAndStop(1)				instructions.gotoAndPlay(1)				stage.addEventListener(MouseEvent.MOUSE_DOWN, onCreateCircle)				stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUpCircle)				stage.removeEventListener(MouseEvent.MOUSE_DOWN, onDrawLine)				stage.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpLine)			}			if(event.keyCode == Keyboard.RIGHT){				instructions.colors.tools.gotoAndStop(2)				instructions.gotoAndPlay(1)				stage.addEventListener(MouseEvent.MOUSE_DOWN, onDrawLine)				stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUpLine)				stage.removeEventListener(MouseEvent.MOUSE_DOWN, onCreateCircle)				stage.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpCircle)			}		}		private function onCreateCircle(event:MouseEvent):void{			click = true			addEventListener(Event.ENTER_FRAME, onEnterFrameCircle)		}		private function onMouseUpCircle(event:MouseEvent):void{			click = false			removeEventListener(Event.ENTER_FRAME, onEnterFrameCircle)			radius = 0		}		private function onEnterFrameCircle(event:Event):void{			radius++			circle = new Circle(radius, mouseX, mouseY, color)			stage_Mc.addChild(circle)		}		private function onDrawLine(event:MouseEvent):void{			click = true			line = new Sprite			line.graphics.lineStyle(4, color)			line.graphics.moveTo(mouseX, mouseY)			addEventListener(Event.ENTER_FRAME, onEnterFrameLine)		}		private function onMouseUpLine(event:MouseEvent):void{			click = false			removeEventListener(Event.ENTER_FRAME, onEnterFrameLine)		}		private function onEnterFrameLine(event:Event):void{			line.graphics.lineTo(mouseX, mouseY)			stage_Mc.addChild(line)		}		private function onChangeColor(event:KeyboardEvent):void{			if(event.keyCode == 49){ //1				color = 0x6666ff //blue				instructions.colors.colorText.gotoAndStop(1)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 50){ //2				color = 0xff6600 //orange 				instructions.colors.colorText.gotoAndStop(2)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 51){ //3				color = 0xcc0000 //red				instructions.colors.colorText.gotoAndStop(3)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 52){ //4				color = 0x339900 //green				instructions.colors.colorText.gotoAndStop(4)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 53){ //5				color = 0xffff00 //yellow				instructions.colors.colorText.gotoAndStop(5)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 54){ //6				color = 0x663399 //purple				instructions.colors.colorText.gotoAndStop(6)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 55){ //7				color = 0x0000 // black				instructions.colors.colorText.gotoAndStop(7)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 56){ //8				color = 0x666666//grey				instructions.colors.colorText.gotoAndStop(8)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 57){//9				color = 0xCCCCCC //light grey				instructions.colors.colorText.gotoAndStop(9)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 48){//0				color = 0xFFFFFF //white				instructions.colors.colorText.gotoAndStop(10)				instructions.gotoAndPlay(1)			}			if(event.keyCode == 32){				if(!click){					addEventListener(Event.ENTER_FRAME, onUndo)				}			}			if(event.keyCode == 81){				fscommand("quit")				trace("quit")			}			if(event.keyCode == 73){				if(instruction.visible == true){					instruction.visible = false				}else{					instruction.visible = true				}			}			if(event.keyCode == 67){				var drawnPic_bd:BitmapData = new BitmapData(stage.width, stage.height)				drawnPic_bd.draw(stage)				var drawnPic:Bitmap = new Bitmap(drawnPic_bd)							}		}		private function onStopDelete(event:KeyboardEvent){			stopDelete();		}		private function onEnterFrame(event:Event):void{			stage_Mc.x = 0			stage_Mc.y = 0		}		private function onUndo(event:Event):void{			var i:Number = stage_Mc.numChildren ; 			i -=1			i >= 1			MovieClip(stage_Mc).removeChildAt(i)		}		private function stopDelete():void{			removeEventListener(Event.ENTER_FRAME, onUndo)		}	}	}